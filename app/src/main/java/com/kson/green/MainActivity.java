package com.kson.green;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import com.kson.green.api.Api;import com.kson.green.api.CartApi;import com.kson.green.entity.BaseResponse;import com.kson.green.entity.CartBean;import com.kson.green.entity.CartEntity;import com.kson.green.entity.Product;import com.kson.green.utils.GreenDaoUtils;import java.util.HashMap;import java.util.List;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.functions.Consumer;import io.reactivex.schedulers.Schedulers;import okhttp3.OkHttpClient;import okhttp3.logging.HttpLoggingInterceptor;import retrofit2.Retrofit;import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.http.Body;public class MainActivity extends AppCompatActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        requestCarts();    }    /**     * 请求数据     */    private void requestCarts() {        OkHttpClient okHttpClient = new OkHttpClient.Builder()                .addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))                .build();        HashMap<String,String> headers = new HashMap<>();        headers.put("userId","251");        headers.put("sessionId","1563374462630251");        Retrofit retrofit = new Retrofit.Builder()                .baseUrl(Api.BASE_URL)                .client(okHttpClient)                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())                .addConverterFactory(GsonConverterFactory.create())                .build();        CartApi cartApi = retrofit.create(CartApi.class);        cartApi.getCarts(headers)                .subscribeOn(Schedulers.io())                .observeOn(AndroidSchedulers.mainThread())                .subscribe(new Consumer<BaseResponse<List<CartBean>>>() {                    @Override                    public void accept(BaseResponse<List<CartBean>> cartEntityBaseResponse) throws Exception {                        System.out.println("size===="+cartEntityBaseResponse.result.size());                        List<CartBean> list = cartEntityBaseResponse.result;                        for (int i = 0; i < list.size(); i++) {                            CartEntity cartEntity = new CartEntity();                            cartEntity.setId((long) i);                            cartEntity.setCategoryName(list.get(i).categoryName);                            GreenDaoUtils.getInstance().getDaoSession().getCartEntityDao().insertOrReplaceInTx(cartEntity);                            for (int i1 = 0; i1 < list.get(i).shoppingCartList.size(); i1++) {                                Product product = new Product();                                product.setBusinessId((long) i);                                product.setCommodityId(list.get(i).shoppingCartList.get(i1).commodityId);                                GreenDaoUtils.getInstance().getDaoSession().getProductDao().insertOrReplaceInTx(product);                            }                        }                        System.out.println("ssssss1==="+GreenDaoUtils.getInstance().getDaoSession().getCartEntityDao().loadAll().size());                        for (CartEntity cartEntity : GreenDaoUtils.getInstance().getDaoSession().getCartEntityDao().loadAll()) {                            System.out.println("ccccc==="+cartEntity.getShoppingCartList().get(0).getCommodityId());                        }                    }                }, new Consumer<Throwable>() {                    @Override                    public void accept(Throwable throwable) throws Exception {                    }                });    }}